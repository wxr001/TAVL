jobs:
  include:
  # GCC 7
  - os: linux
    dist: xenial
    addons: &gcc7
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-7
        - ninja-build
        - tree
    language: cpp
    compiler: gcc
    env:
    - COMPILER=g++-7
    - TAVL_CXX_STANDARD=17
    - BUILD_TYPE=Release
    before_install:
    - travis_wait sudo apt-get update -qq
    - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 90
  # GCC 8
  - os: linux
    dist: xenial
    sudo: required
    addons: &gcc8
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-8
        - ninja-build
        - tree
    language: cpp
    compiler: gcc
    env:
    - COMPILER=g++-8
    - TAVL_CXX_STANDARD=17
    - BUILD_TYPE=Release
    before_install:
    - travis_wait sudo apt-get update -qq
    - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 90
  # GCC 9
  - os: linux
    dist: xenial
    sudo: required
    addons: &gcc9
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-9
        - ninja-build
        - tree
    language: cpp
    compiler: gcc
    env:
    - COMPILER=g++-9
    - TAVL_CXX_STANDARD=17
    - BUILD_TYPE=Release
    before_install:
    - travis_wait sudo apt-get update -qq
    - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 90
  # GCC 10
  - os: linux
    dist: bionic
    addons: &gcc10
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-10
        - ninja-build
        - tree
    language: cpp
    compiler: gcc
    env:
    - COMPILER=g++-10
    - TAVL_CXX_STANDARD=17
    - BUILD_TYPE=Release
    before_install:
    - travis_wait sudo apt-get update -qq
    - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 90    
  # GCC 10-CXX20
  - os: linux
    dist: bionic
    addons: &gcc10cxx20
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-10
        - ninja-build
        - tree
    language: cpp
    compiler: gcc
    env:
    - COMPILER=g++-10
    - TAVL_CXX_STANDARD=20
    - BUILD_TYPE=Release
    before_install:
    - travis_wait sudo apt-get update -qq
    - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 90  
  # Clang 6.0
  - os: linux
    dist: xenial
    addons: &clang60
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-xenial-6.0
        - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main'
          key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
        - clang-6.0
        - g++-7
        - ninja-build
        - tree
    language: cpp
    env:
    - MATRIX_EVAL="CC=clang-6.0  CXX=clang++-6.0"
    - COMPILER=clang++-6.0
    - TAVL_CXX_STANDARD=17
    - BUILD_TYPE=Release
    before_install:
    - travis_wait sudo apt-get update -qq
    - sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-6.0 1000
    - sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-6.0 1000
    - eval export ${MATRIX_EVAL}
    - clang --version
  # Clang 7
  - os: linux
    dist: xenial
    addons: &clang70
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-xenial-7
        - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-7 main'
          key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
        - clang-7
        - g++-7
        - ninja-build
        - tree
    language: cpp
    env:
    - MATRIX_EVAL="CC=clang-7  CXX=clang++-7"
    - COMPILER=clang++-7
    - TAVL_CXX_STANDARD=17
    - BUILD_TYPE=Release
    before_install:
    - travis_wait sudo apt-get update -qq
    - sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-7 1000
    - sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-7 1000
    - eval export ${MATRIX_EVAL}
    - clang --version
  # Clang 8
  - os: linux
    dist: xenial
    sudo: required
    addons: &clang80
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-xenial-8
        - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main'
          key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
        - clang-8
        - g++-7
        - ninja-build
        - tree
    language: cpp
    env:
    - MATRIX_EVAL="CC=clang-8  CXX=clang++-8"
    - COMPILER=clang++-8
    - TAVL_CXX_STANDARD=17
    - BUILD_TYPE=Release
    before_install:
    - travis_wait sudo apt-get update -qq
    - sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-8 1000
    - sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-8 1000
    - eval export ${MATRIX_EVAL}
    - clang --version
  # Clang 9
  - os: linux
    dist: xenial
    sudo: required
    addons: &clang90
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-xenial-9
        - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main'
          key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
        - clang-9
        - g++-7
        - ninja-build
        - tree
    language: cpp
    env:
    - MATRIX_EVAL="CC=clang-9  CXX=clang++-9"
    - COMPILER=clang++-9
    - TAVL_CXX_STANDARD=17
    - BUILD_TYPE=Release
    before_install:
    - travis_wait sudo apt-get update -qq
    - sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-9 1000
    - sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-9 1000
    - eval export ${MATRIX_EVAL}
    - clang --version
  # Clang 10
  - os: linux
    dist: xenial
    addons: &clang100
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-xenial-10
        - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main'
          key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
        - clang-10
        - g++-7
        - ninja-build
        - tree
    language: cpp
    env:
    - MATRIX_EVAL="CC=clang-10  CXX=clang++-10"
    - COMPILER=clang++-10
    - TAVL_CXX_STANDARD=17
    - BUILD_TYPE=Release
    before_install:
    - travis_wait sudo apt-get update -qq
    - sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-10 1000
    - sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-10 1000
    - eval export ${MATRIX_EVAL}
    - clang --version    
  # Clang 10-CXX20
  - os: linux
    dist: xenial
    addons: &clang100cxx20
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-xenial-10
        - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main'
          key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
        - clang-10
        - g++-7
        - ninja-build
        - tree
    language: cpp
    env:
    - MATRIX_EVAL="CC=clang-10 CXX=clang++-10"
    - COMPILER=clang++-10
    - TAVL_CXX_STANDARD=20
    - BUILD_TYPE=Release
    before_install:
    - travis_wait sudo apt-get update -qq
    - sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-10 1000
    - sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-10 1000
    - eval export ${MATRIX_EVAL}
    - clang --version  
  # XCode 10.0
  - os: osx
    osx_image: xcode10
    sudo: required
    language: cpp
    compiler: clang
    env:
    - COMPILER=clang++
    - TAVL_CXX_STANDARD=17
    - BUILD_TYPE=Release
    before_install:
    - export http_proxy='';
    - travis_wait brew update
    - brew install tree
    - brew install cmake || brew upgrade cmake
    - brew install ninja
  # XCode 11.2
  - os: osx
    osx_image: xcode11.2
    sudo: required
    language: cpp
    compiler: clang
    env:
    - COMPILER=clang++
    - TAVL_CXX_STANDARD=17
    - BUILD_TYPE=Release
    before_install:
    - export http_proxy='';
    - travis_wait brew update
    - brew install tree
    - brew install cmake || brew upgrade cmake
    - brew install ninja

script:
- cd $TRAVIS_BUILD_DIR
- mkdir Build && cd Build
- |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      cmake .. -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_STANDARD=$TAVL_CXX_STANDARD
    else
      cmake .. -G "Xcode" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_SHARED_LIBS=OFF
    fi
- tree -d
- |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      make all
    else
      xcodebuild -quiet -target test -configuration $BUILD_TYPE
    fi
- cd ../
